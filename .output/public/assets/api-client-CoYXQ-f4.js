var l=Object.defineProperty;var S=(e,t,s)=>t in e?l(e,t,{enumerable:!0,configurable:!0,writable:!0,value:s}):e[t]=s;var g=(e,t,s)=>S(e,typeof t!="symbol"?t+"":t,s);import{ay as h}from"./main-amE6mPDm.js";class u extends Error{constructor(s,r){super(s);g(this,"status");this.status=r}}async function o(e,t={}){const s=`${h.apiBaseUrl}${e}`,r={...t.headers||{}};typeof t.body<"u"&&!(t.body instanceof FormData)&&(r["Content-Type"]="application/json"),t.token&&(r.Authorization=`Bearer ${t.token}`);const i=await fetch(s,{...t,headers:r}),d=(i.headers.get("content-type")||"").includes("application/json"),c=d?await i.json():await i.text();if(!i.ok){const p=d&&(c!=null&&c.message)?c.message:i.statusText;throw new u(p||"Request failed",i.status)}return c}async function a(e,t={}){const s=await o(e,t);if(!s.success){const r=s.error||s.message||"Request failed";throw new u(r)}return s}const $={register:e=>a("/auth/register",{method:"POST",body:JSON.stringify(e)}),login:e=>a("/auth/login",{method:"POST",body:JSON.stringify(e)}),profile:e=>o("/auth/profile",{token:e}),listCourses:(e={})=>{const t=new URLSearchParams;e.page&&t.set("page",String(e.page)),e.page_size&&t.set("page_size",String(e.page_size)),e.q&&t.set("q",e.q);const s=t.toString();return a(`/courses${s?`?${s}`:""}`)},getCourse:e=>a(`/courses/${e}`),listLectures:(e,t={})=>{const s=new URLSearchParams;t.page&&s.set("page",String(t.page)),t.page_size&&s.set("page_size",String(t.page_size));const r=s.toString();return a(`/courses/${e}/lectures${r?`?${r}`:""}`)},enroll:(e,t)=>a(`/courses/${t}/enroll`,{method:"POST",token:e}),listEnrollments:(e,t={})=>{const s=new URLSearchParams;t.page&&s.set("page",String(t.page)),t.page_size&&s.set("page_size",String(t.page_size));const r=s.toString();return a(`/enrollments${r?`?${r}`:""}`,{token:e})},createCourse:(e,t)=>a("/courses",{method:"POST",body:JSON.stringify(t),token:e}),updateCourse:(e,t,s)=>a(`/courses/${t}`,{method:"PUT",body:JSON.stringify(s),token:e}),deleteCourse:(e,t)=>a(`/courses/${t}`,{method:"DELETE",token:e}),createLecture:(e,t)=>a("/courses/lectures",{method:"POST",body:JSON.stringify(t),token:e}),getVideo:e=>o(`/videos/${e}`),listCourseVideos:e=>o(`/videos/course/${e}`),updateProgress:(e,t)=>o("/progress/update",{method:"POST",body:JSON.stringify(t),token:e}),getLectureProgress:(e,t,s)=>o(`/progress/courses/${t}/lectures/${s}`,{token:e}),getCourseProgress:(e,t)=>o(`/progress/courses/${t}`,{token:e}),getCourseCompletion:(e,t)=>o(`/progress/courses/${t}/completion`,{token:e}),completeLecture:(e,t)=>o("/progress/lectures/complete",{method:"POST",body:JSON.stringify(t),token:e}),getUserAnalytics:e=>o("/analytics/user",{token:e}),uploadFile:(e,t)=>fetch(`${h.apiBaseUrl}/files/upload`,{method:"POST",headers:{Authorization:`Bearer ${e}`},body:t}).then(async s=>{if(!s.ok)throw new u(s.statusText,s.status);return s.json()}),listFiles:(e,t={})=>{const s=new URLSearchParams;Object.entries(t).forEach(([n,i])=>{(typeof i=="number"||typeof i=="string"&&i!=="")&&s.set(n,String(i))});const r=s.toString();return o(`/files${r?`?${r}`:""}`,{token:e})},deleteFile:(e,t)=>o(`/files/${t}`,{method:"DELETE",token:e}),getFileMetadata:(e,t)=>o(`/files/${t}/metadata`,{token:e}),startMultipart:(e,t)=>o("/files/upload/start",{method:"POST",body:JSON.stringify(t),token:e}),getMultipartUrls:(e,t,s)=>o(`/files/upload/${t}/parts`,{method:"POST",body:JSON.stringify(s),token:e}),completeMultipart:(e,t,s)=>o(`/files/upload/${t}/complete`,{method:"POST",body:JSON.stringify(s),token:e}),listTopics:(e={})=>{const t=new URLSearchParams;Object.entries(e).forEach(([r,n])=>{n!==void 0&&t.set(r,String(n))});const s=t.toString();return o(`/forum/topics${s?`?${s}`:""}`)},getTopic:e=>o(`/forum/topics/${e}`),listTopicPosts:(e,t={})=>{const s=new URLSearchParams;Object.entries(t).forEach(([n,i])=>{i!==void 0&&s.set(n,String(i))});const r=s.toString();return o(`/forum/topics/${e}/posts${r?`?${r}`:""}`)},createTopic:(e,t)=>o("/forum/topics",{method:"POST",body:JSON.stringify(t),token:e}),createPost:(e,t)=>o("/forum/posts",{method:"POST",body:JSON.stringify(t),token:e}),createPaymentMethod:(e,t)=>o("/payments/methods",{method:"POST",body:JSON.stringify(t),token:e}),listPaymentMethods:e=>o("/payments/methods",{token:e}),setDefaultPaymentMethod:(e,t)=>o(`/payments/methods/${t}/default`,{method:"PUT",token:e}),deletePaymentMethod:(e,t)=>o(`/payments/methods/${t}`,{method:"DELETE",token:e}),purchaseCourse:(e,t,s)=>o(`/payments/purchase/course/${t}`,{method:"POST",body:JSON.stringify(s),token:e}),listTransactions:(e,t={})=>{const s=new URLSearchParams;Object.entries(t).forEach(([n,i])=>s.set(n,String(i)));const r=s.toString();return o(`/payments/transactions${r?`?${r}`:""}`,{token:e})},listSubscriptions:e=>o("/payments/subscriptions",{token:e}),createSubscription:(e,t)=>o("/payments/subscriptions",{method:"POST",body:JSON.stringify(t),token:e}),updateSubscription:(e,t,s)=>o(`/payments/subscriptions/${t}`,{method:"PUT",body:JSON.stringify(s),token:e}),listChatSessions:(e,t={})=>{const s=new URLSearchParams;Object.entries(t).forEach(([n,i])=>s.set(n,String(i)));const r=s.toString();return o(`/chat/sessions${r?`?${r}`:""}`,{token:e})},createChatSession:(e,t)=>o("/chat/sessions",{method:"POST",body:JSON.stringify(t),token:e}),sendChatMessage:(e,t,s)=>o(`/chat/sessions/${t}/messages`,{method:"POST",body:JSON.stringify(s),token:e})};export{$ as a};
